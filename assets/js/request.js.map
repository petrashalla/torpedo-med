{"version":3,"file":"request.js","sources":["request.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\r\n\r\n    function clearInput(button) {\r\n        const input = button.parentNode.querySelector('input');\r\n        input.value = '';\r\n        toggleClearButton(button);\r\n    }\r\n\r\n    function toggleClearButton(button) {\r\n        const input = button.parentNode.querySelector('input');\r\n        const clearButton = button;\r\n        if (input.value.length > 0) {\r\n            clearButton.style.display = 'block';\r\n        } else {\r\n            clearButton.style.display = 'none';\r\n        }\r\n    }\r\n\r\n    const clearInputButtons = document.querySelectorAll('.input-clear');\r\n    clearInputButtons.forEach(button => {\r\n        const input = button.parentNode.querySelector('input');\r\n        input.addEventListener('input', () => toggleClearButton(button));\r\n        toggleClearButton(button);\r\n        button.addEventListener('click', () => clearInput(button));\r\n    });\r\n\r\n\r\n    ;[].forEach.call(\r\n        document.querySelectorAll('input[type=tel]'),\r\n        function (input) {\r\n            let keyCode\r\n            function mask(event) {\r\n                event.keyCode && (keyCode = event.keyCode)\r\n                let pos = this.selectionStart\r\n                if (pos < 3) event.preventDefault()\r\n                let matrix = '+7 (___) ___-__-__',\r\n                    i = 0,\r\n                    def = matrix.replace(/\\D/g, ''),\r\n                    val = this.value.replace(/\\D/g, ''),\r\n                    new_value = matrix.replace(/[_\\d]/g, function (a) {\r\n                        return i < val.length ? val.charAt(i++) || def.charAt(i) : a\r\n                    })\r\n                i = new_value.indexOf('_')\r\n                if (i != -1) {\r\n                    i < 5 && (i = 3)\r\n                    new_value = new_value.slice(0, i)\r\n                }\r\n                let reg = matrix\r\n                    .substr(0, this.value.length)\r\n                    .replace(/_+/g, function (a) {\r\n                        return '\\\\d{1,' + a.length + '}'\r\n                    })\r\n                    .replace(/[+()]/g, '\\\\$&')\r\n                reg = new RegExp('^' + reg + '$')\r\n                if (\r\n                    !reg.test(this.value) ||\r\n                    this.value.length < 5 ||\r\n                    (keyCode > 47 && keyCode < 58)\r\n                )\r\n                    this.value = new_value\r\n                if (event.type == 'blur' && this.value.length < 5) this.value = ''\r\n            }\r\n\r\n            input.addEventListener('input', mask, false)\r\n            input.addEventListener('focus', mask, false)\r\n            input.addEventListener('blur', mask, false)\r\n            input.addEventListener('keydown', mask, false)\r\n        }\r\n    )\r\n\r\n    function GetYMCID() {\r\n        var match = document.cookie.match('(?:^|;)\\\\s*_ym_uid=([^;]*)');\r\n        return (match) ? decodeURIComponent(match[1]) : false;\r\n    }\r\n\r\n    const formButtons = document.querySelectorAll('button[type=\"submit\"]');\r\n\r\n    formButtons.forEach(button => {\r\n\r\n        const formObj = button.parentNode;\r\n        const divWrap = document.createElement('div');\r\n        divWrap.innerHTML =\r\n            `<input name=\"trafficSource\" type=\"hidden\" value=\"\">\r\n            <input name=\"istochnik\" type=\"hidden\" value=\"\">\r\n            <input name=\"clientID\" type=\"hidden\" value=\"${GetYMCID()}\">`;\r\n        formObj.appendChild(divWrap);\r\n\r\n        if (typeof sbjs !== 'undefined') {\r\n            sbjs.init(divWrap);\r\n            formObj.querySelector(\"input[name=trafficSource]\").value = sbjs.get.current.typ;\r\n            formObj.querySelector(\"input[name=istochnik]\").value = sbjs.get.current.src;\r\n        }\r\n\r\n        button.addEventListener('click', async function (event) {\r\n            event.preventDefault();\r\n            console.log(\"testr\");\r\n            const form = this.closest('form');\r\n            const modalOpen = form.dataset.modalOpen;\r\n            const popups = {\r\n                success: form.dataset.modalOk,\r\n                error: form.dataset.modalErr\r\n            };\r\n\r\n            const fields = {};\r\n            const inputs = form.querySelectorAll('input[type=\"tel\"], textarea, input[type=\"text\"]');\r\n            inputs.forEach(input => {\r\n                if (input.hasAttribute('required')) {\r\n                    fields[input.name] = {\r\n                        type: input.type,\r\n                        value: input.value\r\n                    };\r\n                }\r\n            })\r\n\r\n            const resultWrappers = {\r\n                success: document.querySelector(popups.success),\r\n                error: document.querySelector(popups.error)\r\n            };\r\n\r\n            if (validateInputs(fields)) {\r\n                await handleSubmission(this, form, resultWrappers, modalOpen);\r\n            } else {\r\n                markErrors(form);\r\n            }\r\n\r\n        });\r\n\r\n        const urlInputs = document.querySelectorAll(\"input[name='urlMessage'], input[name='title_url_message']\");\r\n        urlInputs.forEach(input => {\r\n            input.value = input.name === 'urlMessage' ? window.location.href : document.title;\r\n        });\r\n    });\r\n\r\n    function validateInputs(fields) {\r\n        let isValid = true;\r\n        for (let fieldName in fields) {\r\n            const field = fields[fieldName];\r\n            switch (field.type) {\r\n                case 'tel':\r\n                    const phoneNumber = field.value.replace(/\\D/g, '');\r\n                    if (phoneNumber.length < 11) {\r\n                        isValid = false;\r\n                    }\r\n                    break;\r\n                case 'textarea':\r\n                case 'text':\r\n                    if (!/[а-яА-ЯёЁ]/.test(field.value) || field.value.trim().length <= 2) {\r\n                        isValid = false;\r\n                    }\r\n                    break;\r\n                default:\r\n                    isValid = false;\r\n                    break;\r\n            }\r\n            if (!isValid) {\r\n                break;\r\n            }\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    async function handleSubmission(button, form, resultWrappers, modalOpen) {\r\n        const originalText = button.innerText;\r\n        button.innerHTML = \"Отправление\";\r\n        button.disabled = true;\r\n        try {\r\n            const response = await fetch(`/netcat_template/ajax/request.php`, {\r\n                method: 'POST',\r\n                body: new FormData(form)\r\n            });\r\n            const responseText = await response.text();\r\n            const isSuccess = response.ok;\r\n            openModal(isSuccess ? resultWrappers.success : resultWrappers.error, responseText, modalOpen);\r\n\r\n        } catch (error) {\r\n            openModal(resultWrappers.error, error.message, modalOpen);\r\n        } finally {\r\n            resetButton(button, originalText);\r\n        }\r\n    }\r\n\r\n    function openModal(wrapper, content, modalOpen) {\r\n        const modal = wrapper.closest('.popup');\r\n        modal.classList.add(modalOpen);\r\n        wrapper.innerHTML = content;\r\n    }\r\n\r\n    function resetButton(button, buttonText) {\r\n        button.innerText = buttonText;\r\n        button.disabled = false;\r\n    }\r\n\r\n    function validateInputs(fields) {\r\n        let isValid = true;\r\n        for (let fieldName in fields) {\r\n            const field = fields[fieldName];\r\n            switch (field.type) {\r\n                case 'tel':\r\n                    const phoneNumber = field.value.replace(/\\D/g, '');\r\n                    if (phoneNumber.length < 11) {\r\n                        isValid = false;\r\n                    }\r\n                    break;\r\n                case 'textarea':\r\n                case 'text':\r\n                    if (!/[а-яА-ЯёЁ]/.test(field.value) || field.value.trim().length <= 2) {\r\n                        isValid = false;\r\n                    }\r\n                    break;\r\n                default:\r\n                    isValid = false;\r\n                    break;\r\n            }\r\n            if (!isValid) {\r\n                break;\r\n            }\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    function markErrors(form) {\r\n\r\n        const inputs = form.querySelectorAll('input[type=\"tel\"], textarea, input[type=\"text\"]');\r\n\r\n        inputs.forEach(input => {\r\n            removeErrorStyle(input);\r\n            const errorMessage = getErrorMessage(input);\r\n\r\n            if (errorMessage) {\r\n                addErrorStyle(input, errorMessage,);\r\n                setTimeout(() => {\r\n                    removeErrorStyle(input);\r\n                }, 3000);\r\n            }\r\n\r\n            input.addEventListener('input', function () {\r\n                if (this.value) {\r\n                    removeErrorStyle(this);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    function getErrorMessage(input) {\r\n\r\n        let message = '';\r\n\r\n        switch (input.type) {\r\n            case 'tel':\r\n                const phoneNumber = input.value.replace(/\\D/g, '');\r\n                if (phoneNumber.length < 11) {\r\n                    message = 'Введите верный номер телефона';\r\n                }\r\n                break;\r\n            case 'textarea':\r\n            case 'text':\r\n                if (!/[а-яА-ЯёЁ]/.test(input.value) || input.value.trim().length <= 2) {\r\n                    message = 'Текст должен содержать русские буквы';\r\n                }\r\n                break;\r\n            default:\r\n                message = 'Поле не заполнено';\r\n                break;\r\n        }\r\n\r\n        return message;\r\n    }\r\n\r\n    function addErrorStyle(input, message) {\r\n        input.classList.add(\"error-wrapper\");\r\n        input.classList.add('error');\r\n    }\r\n\r\n    function removeErrorStyle(input) {\r\n        input.classList.remove('error');\r\n        input.classList.remove('error-wrapper');\r\n    }\r\n\r\n});\r\n\r\n"],"names":["document","addEventListener","toggleClearButton","button","input","parentNode","querySelector","value","length","clearButton","style","display","openModal","wrapper","content","modalOpen","closest","classList","add","innerHTML","removeErrorStyle","remove","querySelectorAll","forEach","call","let","keyCode","mask","event","this","selectionStart","preventDefault","matrix","i","def","replace","val","new_value","a","charAt","indexOf","slice","reg","substr","RegExp","test","type","match","formObj","divWrap","createElement","cookie","decodeURIComponent","appendChild","sbjs","init","get","current","typ","src","async","console","log","form","dataset","popups","success","modalOk","error","modalErr","fields","hasAttribute","name","resultWrappers","isValid","fieldName","field","trim","handleSubmission","originalText","innerText","disabled","response","await","fetch","method","body","FormData","responseText","text","ok","message","buttonText","errorMessage","setTimeout","window","location","href","title"],"mappings":"AAAAA,SAASC,iBAAiB,mBAAoB,KAQ1C,SAASC,EAAkBC,GACvB,IAAMC,EAAQD,EAAOE,WAAWC,cAAc,OAAO,EAE5B,EAArBF,EAAMG,MAAMC,OACZC,EAAYC,MAAMC,QAAU,QAE5BF,EAAYC,MAAMC,QAAU,MAEpC,CAqKA,SAASC,EAAUC,EAASC,EAASC,GACnBF,EAAQG,QAAQ,QAAQ,EAChCC,UAAUC,IAAIH,CAAS,EAC7BF,EAAQM,UAAYL,CACxB,CAwFA,SAASM,EAAiBhB,GACtBA,EAAMa,UAAUI,OAAO,OAAO,EAC9BjB,EAAMa,UAAUI,OAAO,eAAe,CAC1C,CAlQ0BrB,SAASsB,iBAAiB,cAAc,EAChDC,QAAQpB,IACRA,EAAOE,WAAWC,cAAc,OAAO,EAC/CL,iBAAiB,QAAS,IAAMC,EAAkBC,CAAM,CAAC,EAC/DD,EAAkBC,CAAM,EACxBA,EAAOF,iBAAiB,QAAS,KArBrC,IAAoBE,GAAAA,EAqBkCA,GApB7BE,WAAWC,cAAc,OAAO,EAC/CC,MAAQ,GACdL,EAAkBC,CAAM,CAkBgC,CAAC,CAC7D,CAAC,EAGA,GAAGoB,QAAQC,KACRxB,SAASsB,iBAAiB,iBAAiB,EAC3C,SAAUlB,GACNqB,IAAIC,EACJ,SAASC,EAAKC,GACVA,EAAMF,UAAYA,EAAUE,EAAMF,SACxBG,KAAKC,eACL,GAAGF,EAAMG,eAAe,EAClCN,IAAIO,EAAS,qBACTC,EAAI,EACJC,EAAMF,EAAOG,QAAQ,MAAO,EAAE,EAC9BC,EAAMP,KAAKtB,MAAM4B,QAAQ,MAAO,EAAE,EAClCE,EAAYL,EAAOG,QAAQ,SAAU,SAAUG,GAC3C,OAAOL,EAAIG,EAAI5B,OAAS4B,EAAIG,OAAON,CAAC,EAAE,GAAKC,EAAIK,OAAON,CAAC,EAAIK,CAC/D,CAAC,EAEI,CAAC,IADVL,EAAII,EAAUG,QAAQ,GAAG,KAErBP,EAAI,IAAMA,EAAI,GACdI,EAAYA,EAAUI,MAAM,EAAGR,CAAC,GAEpCR,IAAIiB,EAAMV,EACLW,OAAO,EAAGd,KAAKtB,MAAMC,MAAM,EAC3B2B,QAAQ,MAAO,SAAUG,GACtB,MAAO,SAAWA,EAAE9B,OAAS,GACjC,CAAC,EACA2B,QAAQ,SAAU,MAAM,GAGzB,EAACO,EAFC,IAAIE,OAAO,IAAMF,EAAM,GAAG,GAEvBG,KAAKhB,KAAKtB,KAAK,GACpBsB,KAAKtB,MAAMC,OAAS,GACT,GAAVkB,GAAgBA,EAAU,MAE3BG,KAAKtB,MAAQ8B,GACC,QAAdT,EAAMkB,MAAkBjB,KAAKtB,MAAMC,OAAS,IAAGqB,KAAKtB,MAAQ,GACpE,CAEAH,EAAMH,iBAAiB,QAAS0B,EAAM,CAAA,CAAK,EAC3CvB,EAAMH,iBAAiB,QAAS0B,EAAM,CAAA,CAAK,EAC3CvB,EAAMH,iBAAiB,OAAQ0B,EAAM,CAAA,CAAK,EAC1CvB,EAAMH,iBAAiB,UAAW0B,EAAM,CAAA,CAAK,CACjD,CACJ,EAOoB3B,SAASsB,iBAAiB,uBAAuB,EAEzDC,QAAQpB,IAEhB,IARI4C,EAQEC,EAAU7C,EAAOE,WACjB4C,EAAUjD,SAASkD,cAAc,KAAK,EAC5CD,EAAQ9B;;0DAVJ4B,EAAQ/C,SAASmD,OAAOJ,MAAM,4BAA4B,EACvD,CAAA,CAAA,GAAUK,mBAAmBL,EAAM,EAAE,MAa5CC,EAAQK,YAAYJ,CAAO,EAEP,aAAhB,OAAOK,OACPA,KAAKC,KAAKN,CAAO,EACjBD,EAAQ1C,cAAc,2BAA2B,EAAEC,MAAQ+C,KAAKE,IAAIC,QAAQC,IAC5EV,EAAQ1C,cAAc,uBAAuB,EAAEC,MAAQ+C,KAAKE,IAAIC,QAAQE,KAG5ExD,EAAOF,iBAAiB,QAAS2D,eAAgBhC,GAC7CA,EAAMG,eAAe,EACrB8B,QAAQC,IAAI,OAAO,EACnB,IAAMC,EAAOlC,KAAKb,QAAQ,MAAM,EAC1BD,EAAYgD,EAAKC,QAAQjD,UACzBkD,EAAS,CACXC,QAASH,EAAKC,QAAQG,QACtBC,MAAOL,EAAKC,QAAQK,QACxB,EAEA,IAAMC,EAAS,GACAP,EAAKzC,iBAAiB,iDAAiD,EAC/EC,QAAQnB,IACPA,EAAMmE,aAAa,UAAU,IAC7BD,EAAOlE,EAAMoE,MAAQ,CACjB1B,KAAM1C,EAAM0C,KACZvC,MAAOH,EAAMG,KACjB,EAER,CAAC,EAEKkE,EAAiB,CACnBP,QAASlE,SAASM,cAAc2D,EAAOC,OAAO,EAC9CE,MAAOpE,SAASM,cAAc2D,EAAOG,KAAK,CAC9C,EAEA,IAyEgBE,IACpB7C,IAAIiD,EAAU,CAAA,EACd,IAAKjD,IAAIkD,KAAaL,EAAQ,CAC1B,IAAMM,EAAQN,EAAOK,GACrB,OAAQC,EAAM9B,MACV,IAAK,MACmB8B,EAAMrE,MAAM4B,QAAQ,MAAO,EAAE,EACjC3B,OAAS,KACrBkE,EAAU,CAAA,GAEd,MACJ,IAAK,WACL,IAAK,QACG,CAAC,aAAa7B,KAAK+B,EAAMrE,KAAK,GAAKqE,EAAMrE,MAAMsE,KAAK,EAAErE,QAAU,KAChEkE,EAAU,CAAA,GAEd,MACJ,QACIA,EAAU,CAAA,CAElB,CACA,GAAI,CAACA,EACD,KAER,CACA,OAAOA,CACX,GAnG2BJ,CAAM,EAAG,CAClBQ,IAyCc3E,EAzCG0B,KAyCKkC,EAzCCA,EA0C/BgB,EAAe5E,EAAO6E,UAC5B7E,EAAOgB,UAAY,cACnBhB,EAAO8E,SAAW,CAAA,EAClB,IACI,IAAMC,EAAWC,MAAMC,MAAM,oCAAqC,CAC9DC,OAAQ,OACRC,KAAM,IAAIC,SAASxB,CAAI,CAC3B,CAAC,EACKyB,EAAeL,MAAMD,EAASO,KAAK,EAEzC7E,EADkBsE,EAASQ,GACLjB,EAAeP,QAAUO,EAAeL,MAAOoB,EAAczE,CAAS,CAMhG,CAJE,MAAOqD,GACLxD,EAAU6D,EAAeL,MAAOA,EAAMuB,QAAS5E,CAAS,CAC5D,CAAE,SAWN,CAAqBZ,EAAQyF,KACzBzF,EAAO6E,UAAYY,EACnBzF,EAAO8E,SAAW,CAAA,CACtB,GAboB9E,EAAQ4E,CAAY,CACpC,CAzDI,MACehB,EAoGCzC,iBAAiB,iDAAiD,EAE/EC,QAAQnB,IACXgB,EAAiBhB,CAAK,EACtB,IAAMyF,GAiBWzF,IAErBqB,IAAIkE,EAAU,GAEd,OAAQvF,EAAM0C,MACV,IAAK,MACmB1C,EAAMG,MAAM4B,QAAQ,MAAO,EAAE,EACjC3B,OAAS,KACrBmF,EAAU,iCAEd,MACJ,IAAK,WACL,IAAK,QACG,CAAC,aAAa9C,KAAKzC,EAAMG,KAAK,GAAKH,EAAMG,MAAMsE,KAAK,EAAErE,QAAU,KAChEmF,EAAU,wCAEd,MACJ,QACIA,EAAU,mBAElB,CAEA,OAAOA,CACX,GAxC6CvF,CAAK,EAEtCyF,KAwCWzF,EAvCGA,GAwChBa,UAAUC,IAAI,eAAe,EACnCd,EAAMa,UAAUC,IAAI,OAAO,EAxCnB4E,WAAW,KACP1E,EAAiBhB,CAAK,CAC1B,EAAG,GAAI,GAGXA,EAAMH,iBAAiB,QAAS,WACxB4B,KAAKtB,OACLa,EAAiBS,IAAI,CAE7B,CAAC,CACL,CAAC,CAnHD,CAAC,EAEiB7B,SAASsB,iBAAiB,2DAA2D,EAC7FC,QAAQnB,IACdA,EAAMG,MAAuB,eAAfH,EAAMoE,KAAwBuB,OAAOC,SAASC,KAAOjG,SAASkG,KAChF,CAAC,CACL,CAAC,CAmJL,CAAC"}